df_final <- bind_rows(as.data.frame(df_filtered), df_without_coords)
setwd(wd_processed_data)
write.csv(df_final, file = "NR_SOUTH_data.csv")
# read data:
setwd(wd_processed_data)
taxon_data <- read.csv('combined_data.csv')
taxon_data <- taxon_data %>% dplyr::select(-X)
taxon_long <- read.csv('combined_long.csv')
taxon_long <- taxon_long %>% dplyr::select(-X)
# without colors
ggplot(taxon_long, aes(x = depth, y = value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(taxon ~ diversity_measure, scales = "free") +  # Facet by diversity measure and taxonomic group
theme_minimal() +
labs(x = "Depth", y = "Value", title = "Diversity Measures by Taxonomic Groups")
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(taxon ~ diversity_measure  , scales = "free", switch = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(taxon ~ diversity_measure  ,  scales = "free_y", switch = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(taxon ~ diversity_measure, scales = "free_y", switch = "y") +  # Free y-axis scale for each column
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "Depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
library(ggplot2)
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
install.packages(ggh4x)
install.packages("ggh4x")
library(ggh4x)
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(1, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.x = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
ggh4x::strip.text.x = element_blank(),
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow1"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow5"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow2"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow4"))  # Customize colors for taxonomic groups
# with colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +  # Color by taxonomic group
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +  # Facet and move categories to the left
theme_minimal() +
theme(
strip.placement = "outside",  # Puts the facet labels outside
strip.text.y.left = element_text(angle = 0),  # Keeps the facet labels horizontal
strip.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),  # Centers the plot title
legend.title = element_blank(),
panel.spacing = unit(2, "lines")
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups") +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Customize colors for taxonomic groups
# read data:
setwd(wd_processed_data)
NR_SOUTH_data <- read.csv('NR_SOUTH_data.csv')
NR_SOUTH_data <- NR_SOUTH_data %>% dplyr::select(-X)
ggplot(NR_SOUTH_data, aes(x = depth, y = value, color = taxon)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure  ,  scales = "free_y", independent = "y") +
theme_minimal() +
theme(
strip.placement = "outside",
strip.text.y.left = element_text(angle = 0),
plot.title = element_text(hjust = 0.5),
legend.title = element_blank()
) +
labs(x = "depth", y = "Value", title = "Diversity Measures by Taxonomic Groups (NR SOUTH)") +
scale_color_manual(values = c("darkred", "darkorange", "#CCFF66"))
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +
geom_point(size = 2, alpha = 0.7) +  # Increase point size and add transparency
geom_smooth(method = "lm", se = FALSE, size = 1) +  # Thinner smooth lines
ggh4x::facet_grid2(taxon ~ diversity_measure, scales = "free_y", independent = "y") +
theme_classic() +  # Use a cleaner theme
theme(
strip.placement = "outside",
strip.text.y.left = element_blank(),  # Remove facet labels on the left
strip.text.y = element_blank(),
strip.background = element_rect(fill = "lightgrey", color = "black"),  # Style strip background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Style title
legend.title = element_blank(),
legend.position = "top",  # Move legend to the top for better space utilization
legend.text = element_text(size = 10),  # Increase legend text size
panel.spacing = unit(2, "lines")  # Adjust panel spacing
) +
labs(
x = "Depth (m)",  # Add units for clarity
y = "Value",
title = "Diversity Measures Across Depths",
subtitle = "Analysis of Taxonomic Groups by Diversity Measure"
) +
scale_color_brewer(palette = "Set2")  # Use a nicer color palette
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +
geom_point(size = 1.5, alpha = 0.8) +  # Moderate point size and transparency
geom_smooth(method = "lm", se = FALSE, size = 0.8, linetype = "dashed") +  # Dashed lines for linear trends
ggh4x::facet_grid2(taxon ~ diversity_measure, scales = "free_y", independent = "y") +
theme_bw() +  # Classic, clean theme suitable for scientific articles
theme(
strip.placement = "outside",  # Keep facet labels outside
strip.text.y = element_blank(),  # Remove facet labels on the y-axis
strip.background = element_blank(),  # Remove background color from facet labels
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),  # Bold, centered title
plot.subtitle = element_text(hjust = 0.5, size = 10, margin = margin(b = 10)),  # Subtle subtitle with spacing
axis.title = element_text(size = 11, face = "bold"),  # Bold axis titles for emphasis
axis.text = element_text(size = 9),  # Slightly smaller axis text for clarity
legend.position = "right",  # Position legend on the right for a cleaner layout
legend.title = element_blank(),  # Remove legend title
legend.text = element_text(size = 9),  # Moderate legend text size
panel.grid.major = element_line(color = "grey80", linetype = "dotted"),  # Subtle grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA)  # Black border for panels
) +
labs(
x = "Depth (m)",  # Include units
y = "Value",
title = "Diversity Measures Across Depth Gradients",
subtitle = "Comparing Taxonomic Groups by Measure"
) +
scale_color_manual(values = c("darkred", "steelblue", "darkgreen"))  # Softer, professional colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +
geom_point(size = 1.5, alpha = 0.8) +  # Moderate point size and transparency
geom_smooth(method = "lm", se = FALSE, size = 0.8, linetype = "dashed") +  # Dashed lines for linear trends
ggh4x::facet_grid2(taxon ~ diversity_measure, scales = "free_y", independent = "y") +
theme_bw() +  # Classic, clean theme suitable for scientific articles
theme(
strip.placement = "outside",  # Keep facet labels outside
strip.text.y = element_blank(),  # Remove facet labels on the y-axis
strip.background = element_blank(),  # Remove background color from facet labels
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),  # Bold, centered title
plot.subtitle = element_text(hjust = 0.5, size = 10, margin = margin(b = 10)),  # Subtle subtitle with spacing
axis.title = element_text(size = 11, face = "bold"),  # Bold axis titles for emphasis
axis.text = element_text(size = 9),  # Slightly smaller axis text for clarity
legend.position = "right",  # Position legend on the right for a cleaner layout
legend.title = element_blank(),  # Remove legend title
legend.text = element_text(size = 9),  # Moderate legend text size
panel.grid.major = element_line(color = "grey80", linetype = "dotted"),  # Subtle grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA)  # Black border for panels
) +
labs(
x = "Depth (m)",  # Include units
y = "Value",
title = "Diversity Measures Across Depth Gradients",
subtitle = "Comparing Taxonomic Groups by Measure"
) +
scale_color_manual(values = c("red", "orange", "yellow3"))  # Softer, professional colors
ggplot(taxon_long, aes(x = depth, y = value, color = taxon)) +
geom_point(size = 1.5, alpha = 0.8) +  # Moderate point size and transparency
geom_smooth(method = "lm", se = FALSE, size = 0.8, linetype = "dashed") +  # Dashed lines for linear trends
ggh4x::facet_grid2(taxon ~ diversity_measure, scales = "free_y", independent = "y") +
theme_bw() +  # Classic, clean theme suitable for scientific articles
theme(
strip.placement = "outside",  # Keep facet labels outside
strip.text.y = element_blank(),  # Remove facet labels on the y-axis
strip.background = element_blank(),  # Remove background color from facet labels
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),  # Bold, centered title
plot.subtitle = element_text(hjust = 0.5, size = 10, margin = margin(b = 10)),  # Subtle subtitle with spacing
axis.title = element_text(size = 11, face = "bold"),  # Bold axis titles for emphasis
axis.text = element_text(size = 9),  # Slightly smaller axis text for clarity
legend.position = "right",  # Position legend on the right for a cleaner layout
legend.title = element_blank(),  # Remove legend title
legend.text = element_text(size = 9),  # Moderate legend text size
panel.grid.major = element_line(color = "grey80", linetype = "dotted"),  # Subtle grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA)  # Black border for panels
) +
labs(
x = "Depth (m)",  # Include units
y = "Value",
title = "Diversity Measures Across Depth Gradients",
subtitle = "Comparing Taxonomic Groups by Measure"
) +
scale_color_manual(values = c("darkred", "steelblue", "darkgreen"))  # Softer, professional colors
# Facet plot of diversity measures by depth for each taxon with updated colors
ggplot(NR_SOUTH_data, aes(x = depth, y = value, color = taxon)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
ggh4x::facet_grid2(taxon ~ diversity_measure, scales = "free_y", independent = "y") +
theme_minimal() +
theme(
strip.placement = "outside",
strip.text.y.left = element_text(angle = 0),
plot.title = element_text(hjust = 0.5),
legend.title = element_blank()
) +
labs(x = "Depth (m)", y = "Value", title = "Diversity Measures by Taxonomic Groups (NR SOUTH)") +
scale_color_manual(values = c("#1B4F72", "#28B463", "#F1C40F"))  # Updated colors
library(mobr)         # running rarefaction analysis - for gradients
library(vegan)
library(dplyr)
library(ggplot2)
library(egg)
library(broom)
# read
# wd
wd_processed_data <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/data/processed"
wd_plots <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/output/plots"
wd_results <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/output/files"
# read data
setwd(wd_processed_data)
wide_red <- read.csv("wide_red.csv")
# removing the wired column x
wide_red = wide_red %>% dplyr::select(-X)
gc()
gc()
# devtools::install_github("PRIMER-e/senlm")
library(dplyr)
library(tidyr)
library(senlm)
# wd:
wd_processed_data <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/data/processed"
# read:
setwd(wd_processed_data)
combined_data <- read.csv("combined_long.csv")
combined_data = combined_data %>% dplyr::select(-X)
# check for zero inflation in my data:
zero_inflation_summary <- combined_data %>%
group_by(taxon, diversity_measure) %>%
summarize(
total_values = n(),
zero_count = sum(value == 0),
zero_proportion = zero_count / total_values
) %>%
arrange(desc(zero_proportion))
# transposing the diversity measure column into 3 independent columns
transformed_data <- combined_data %>% pivot_wider(names_from = diversity_measure, values_from = value)
transformed_data <- as.data.frame(transformed_data)
# list of all taxa:
taxas <- transformed_data %>% pull(taxon) %>% unique() %>% as.list %>% purrr::set_names(.)
# ~ loop:
subsets_taxons <- purrr::map(taxas,
function(taxa) {
transformed_data %>%
dplyr::filter(taxon == taxa)
})
# setting models to fit
# models types:
# - - - - - - - - -
# count models - discreet data (abundance + richness)
count_models <- set_models (mean_class = "main", err_class= "count", method = "crossed") # for abundance and richness
# abundance models - continuous rather then discreet (evenness)
abundance_models <- set_models (mean_class="main", err_class= c("abundance"), method = "crossed") # for sigm
# 1
Pars_c <- create_default_par_list (count_models)
# 2 - define and fit the models:
fitted_models_abu <- purrr::map(subsets_taxons, function(data_subset) {
msenlm(models = count_models, data = data_subset, xvar = "depth", yvar = "abundance", conf.level=0.95)})
# 3 - Create a list of the top abundance models (based on AIC values) for each taxon:
best_models_a <- purrr::map(taxas, ~ {
taxa_models <- fitted_models_abu[[.x]]$abundance
aic_values <- purrr::map_dbl(taxa_models, ~.x$IC["AIC"])
names(aic_values) <- names(taxa_models)
ordered_aic_values <- sort(aic_values)
head(ordered_aic_values)
})
# 4 - Extract the best model for each taxon:
model_summaries_a <- purrr::map(taxas, ~ {
taxa_data <- fitted_models_abu[[.x]]
summary(msenlm.best(taxa_data, best="AICc"))
})
# 1
Pars_c_2 <- create_default_par_list (count_models)
# 2 - define and fit the models:
fitted_models_rich <- purrr::map(subsets_taxons, function(data_subset) {
msenlm(models = count_models, data = data_subset, xvar = "depth", yvar = "richness", conf.level=0.95)})
# 3 - Create a list of the top richness models (based on AIC values) for each taxon:
best_models_r <- purrr::map(taxas, ~ {
taxa_models <- fitted_models_rich[[.x]]$richness
aic_values <- purrr::map_dbl(taxa_models, ~.x$IC["AIC"])
names(aic_values) <- names(taxa_models)
ordered_aic_values <- sort(aic_values)
head(ordered_aic_values)
})
# 4 - Extract the best model for each taxon:
model_summaries_r <- purrr::map(taxas, ~ {
taxa_data <- fitted_models_rich[[.x]]
summary(msenlm.best(taxa_data, best="AICc"))
})
# save the models output:
setwd(wd_processed_data)
write.csv(fitted_models_abu, file = "fitted_models_abu.csv")
write.csv(fitted_models_rich, file = "fitted_models_rich.csv")
write.csv(best_models_r, file = "best_models_r.csv")
write.csv(best_models_a, file = "best_models_a.csv")
View(fitted_models_abu)
# devtools::install_github("PRIMER-e/senlm")
library(dplyr)
library(tidyr)
library(senlm)
# devtools::install_github("PRIMER-e/senlm")
library(dplyr)
library(tidyr)
library(senlm)
# devtools::install_github("PRIMER-e/senlm")
library(dplyr)
library(tidyr)
library(senlm)
library(dplyr)
library(tidyr)
library(senlm)
# wd:
wd_processed_data <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/data/processed"
source("C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/r_scripts/model_fitting.R")
# devtools::install_github("PRIMER-e/senlm")
library(dplyr)
library(tidyr)
library(senlm)
# wd:
wd_processed_data <- "C:/Users/inbar/OneDrive/desktop/r/chapter_2/MoBr/data/processed"
